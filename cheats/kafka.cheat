% kafka

# reset offsets for a topic to latest offset for a consumer group
kafka-consumer-groups.sh --bootstrap-server <broker> --group <group> --execute --reset-offsets --to-latest --topic <topic> —execute

# reset offsets for a topic to earliest offset for a consumer group
kafka-consumer-groups.sh --bootstrap-server <broker> --group <group> --execute --reset-offsets --to-earliest --topic <topic> —execute

# reset offsets for a topic to specific offset for a consumer group
kafka-consumer-groups.sh --bootstrap-server <broker> --group <group> --execute --reset-offsets --to-offset <offset> --topic <topic> —execute

# reset offsets for a topic to a datetime (with format 'YYYY-MM-DDTHH:mm:SS.sss') for a consumer group
kafka-consumer-groups.sh --bootstrap-server <broker> --group <group> --execute --reset-offsets --to-datetime <datetime> --topic <topic> —execute

# delete consumer group
kafka-consumer-groups.sh --bootstrap-server <broker> --delete --group <group>

# describe consumer group / check consumer position
kafka-consumer-groups.sh --bootstrap-server <broker> --describe --group <group>

# list consumer groups
kafka-consumer-groups.sh --bootstrap-server <broker> -list

# consume from kafka topic
kafka-console-consumer.sh --bootstrap-server <broker> --topic <topic> --property print.timestamp=true --property print.key=true

# produce to kafka topic
kafka-console-producer.sh --broker-list <broker> --topic <topic>

# list topics
kafka-topics.sh --list --bootstrap-server <broker>

# list / show partitions whose leader is not available
kafka-topics.sh --bootstrap-server <broker> --describe --under-replicated-partitions

# list / show partitions whose isr-count is less than the configured minimum
kafka-topics.sh --bootstrap-server <broker> --describe --under-min-isr-partitions

# list / show under replicated partitions
kafka-topics.sh --bootstrap-server <broker> --describe --under-replicated-partitions

# list with overriden configs / list intermediary / stores / changelogs topics
kafka-topics.sh --bootstrap-server <broker> --describe --topics-with-overrides

# show / display kafka version
kafka-topics.sh --bootstrap-server <broker> --version

# create topic
kafka-topics.sh --create --bootstrap-server <broker> --replication-factor <replication-factor> --partitions <partitions> --topic <new-topic>

# delete topic
kafka-topics.sh --create --bootstrap-server <broker> --topic <topic>

# alter / modify / update number of partitions for a topic
kafka-topics.sh --bootstrap-server <broker> --topic <topic> --alter --partitions <partitions>

# alter / modify / update replication-factor for a topic
kafka-topics.sh --bootstrap-server <broker> --topic <topic> --alter --replication-factor <replication-factor>

